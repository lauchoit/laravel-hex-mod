<?php

namespace Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Mappers;

use Illuminate\Support\Collection;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Entity\{{StudlyName}};

class {{StudlyName}}Mapper
{
    /**
     * Maps the fields from the {{StudlyName}}Model to the {{StudlyName}} entity.
     *
     * @param array ${{camelName}}
     * @return {{StudlyName}}
     */
    public static function toDomain(array ${{camelName}}): {{StudlyName}}
    {
        return new {{StudlyName}}(
            {{mapperFields}}
        );
    }

    /**
     * Converts a array of {{StudlyName}}Models models to an array of {{StudlyName}}.
     *
     * @param array ${{camelName}}Models
     * @return {{StudlyName}}[]
     */
    public static function toDomainArray(array ${{camelName}}Models): array
    {
        return array_map(fn(array ${{camelName}}Model) => self::toDomain(${{camelName}}Model), ${{camelName}}Models);
    }

    /**
     * Maps raw data to the {{StudlyName}}Model for persistence.
     *
     * @param array $data
     * @param array|null ${{camelName}}Model
     * @return array
     */
    public static function toPersistence(array $data, ?array ${{camelName}}Model = null): array
    {
        $model = ${{camelName}}Model ?? array();

{{persistenceFields}}

        return $model;
    }
}
