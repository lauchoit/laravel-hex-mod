<?php

namespace Lauchoit\LaravelHexMod\{{StudlyName}}\Application\UseCases;

use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Entity\{{StudlyName}};
use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Repository\{{StudlyName}}Repository;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Exceptions\{{StudlyName}}NotFoundException;

readonly class UpdateById{{StudlyName}}UseCase
{
    public function __construct(
        private {{StudlyName}}Repository ${{camelName}}Repository,
        private FindById{{StudlyName}}UseCase $findById{{StudlyName}}UseCase,
    ) { }

    /**
     * Update a {{StudlyName}} entity by its ID.
     *
     * @param array $data
     * @param int ${{camelName}}Id
     * @return {{StudlyName}}
     */
    public function execute(int ${{camelName}}Id, array $data): {{StudlyName}}
    {
        ${{camelName}} = $this->findById{{StudlyName}}UseCase->execute(${{camelName}}Id);
        if (!${{camelName}}) {
            throw new {{StudlyName}}NotFoundException($clientId);
        }
        return $this->{{camelName}}Repository->updateById(${{camelName}}, $data);
    }
}
