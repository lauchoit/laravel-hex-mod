<?php

namespace Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Repository;

use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Entity\{{StudlyName}};
use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Repository\{{StudlyName}}Repository;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Repository\UseCases\Create{{StudlyName}}UseCaseImpl;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Repository\UseCases\DeleteById{{StudlyName}}UseCaseImpl;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Repository\UseCases\FindAll{{StudlyName}}UseCaseImpl;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Repository\UseCases\FindById{{StudlyName}}UseCaseImpl;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Repository\UseCases\UpdateById{{StudlyName}}UseCaseImpl;

class {{StudlyName}}RepositoryImpl extends {{StudlyName}}Repository
{

    public function __construct(
        private readonly Create{{StudlyName}}UseCaseImpl $create,
        private readonly FindAll{{StudlyName}}UseCaseImpl $findAll,
        private readonly FindById{{StudlyName}}UseCaseImpl $findById,
        private readonly DeleteById{{StudlyName}}UseCaseImpl $deleteById,
        private readonly UpdateById{{StudlyName}}UseCaseImpl $updateById,
        ) { }

    /**
     * Create a new {{StudlyName}} entity.
     * @param array $new{{StudlyName}}
     * @return {{StudlyName}}
     */
    public function create(array ${{camelName}}): {{StudlyName}}
    {
        return $this->create->execute(${{camelName}});
    }

    /**
     * Finds all {{StudlyName}} entities.
     * @return {{StudlyName}}[]
     */
    public function findAll(): array
    {
        return $this->findAll->execute();
    }

    /**
     * Finds a {{StudlyName}} by its ID.
     * @param int ${{camelName}}Id
     * @return {{StudlyName}}|null
     */
    public function findById(int ${{camelName}}Id): ?{{StudlyName}}
    {
        return $this->findById->execute(${{camelName}}Id);
    }

    /**
     * Deletes a {{StudlyName}} by its ID.
     *
     * @param {{StudlyName}} ${{camelName}}
     * @return bool
     */
    public function deleteById({{StudlyName}} ${{camelName}}): bool
    {
        return $this->deleteById->execute(${{camelName}});
    }

    /**
     * Update a {{StudlyName}} entity by its ID.
     *
     * @param int ${{camelName}}Id
     * @param array $data
     * @return {{StudlyName}}
     */
    public function updateById(int ${{camelName}}Id, array $data): {{StudlyName}}
    {
        return $this->updateById->execute(${{camelName}}Id, $data);
    }


}