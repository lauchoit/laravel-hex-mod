<?php

namespace Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Repository\UseCases;

use Lauchoit\LaravelHexMod\{{StudlyName}}\Infrastructure\Model\{{StudlyName}} as {{StudlyName}}Model;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Entity\{{StudlyName}};
use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Exceptions\{{StudlyName}}NotFoundException;
use Lauchoit\LaravelHexMod\{{StudlyName}}\Domain\Mappers\{{StudlyName}}Mapper;

class UpdateById{{StudlyName}}UseCaseImpl
{
    /**
     * Update a {{StudlyName}} by its ID.
     *
     * @param int ${{camelName}}Id
     * @param array $data
     * @return {{StudlyName}}
     */
    public function execute(int ${{camelName}}Id, array $data): {{StudlyName}}
    {
        ${{camelName}}Model = {{StudlyName}}Model::find(${{camelName}}Id);
        if (!${{camelName}}Model) {
            throw new {{StudlyName}}NotFoundException(${{camelName}}Id);
        }

        ${{camelName}}Updated = {{StudlyName}}Mapper::toPersistence($data, ${{camelName}}Model->toArray());
        ${{camelName}}Model->fill(${{camelName}}Updated);
        ${{camelName}}Model->save();

        return {{StudlyName}}Mapper::toDomain(${{camelName}}Model->toArray());
    }
}
